version: "3"

tasks:
  minikube:start:
    cmds:
      - minikube start --nodes 2 --cpus 8 --memory 8g
      - minikube addons enable ingress
      - minikube addons enable ingress-dns
      - minikube addons enable storage-provisioner-gluster
  minikube:stop:
    cmds:
      - minikube stop
  minikube:delete:
    cmds:
      - minikube delete
  password:argocd:
    cmds:
      - kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  password:grafana:
    cmds:
      - kubectl get secret --namespace grafana grafana -o jsonpath="{.data.admin-password}" | base64 --decode
  terraform:argocd:plan:
    internal: true
    dir: terraform/
    cmds:
      - terraform init
      - terraform plan
  terraform:argocd:apply:
    prompt: Apply argocd terraform?
    internal: true
    dir: terraform/
    cmds:
      - terraform init
      - terraform apply -auto-approve
  argocd:applicationset:
    internal: true
    prompt: Apply argocd applicationset?  
    dir: argocd/application-sets/
    cmds:
      - kubectl apply -n argocd -f addons.yaml
      - kubectl apply -n argocd -f apps.yaml
  deploy:stack:    
    cmds:
      - task: terraform:argocd:plan
      - task: terraform:argocd:apply
      - task: argocd:applicationset
  helm:dependencies:cluster-addons:  
    vars:
      CHARTS:
        sh: find ./cluster-addons -type f -name Chart.yaml
    cmds:
      - for: { var: CHARTS }
        cmd: helm dependency build {{ .ITEM | dir }}
  helm:dependencies:apps:
    vars:
      CHARTS:
        sh: find ./apps -type f -name Chart.yaml
    cmds:
      - for: { var: CHARTS }
        cmd: helm dependency build {{ .ITEM | dir }}

